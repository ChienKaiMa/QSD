# Some code is generated by Grok

import json


def dump_linspace_params_to_json(
    start, stop, num=50, endpoint=True, dtype="float64", filename="linspace_params.json"
):
    """
    Example usage:
    dump_linspace_params_to_json(0, 10, num=100, endpoint=True, dtype="float64")
    """
    # Assertions to ensure parameter integrity
    assert isinstance(start, (int, float)), "Start must be a number"
    assert isinstance(stop, (int, float)), "Stop must be a number"
    assert isinstance(num, int) and num > 0, "Num must be a positive integer"
    assert isinstance(endpoint, bool), "Endpoint must be a boolean"
    assert isinstance(dtype, str), "Dtype must be a string representing the data type"

    params = {
        "start": start,
        "stop": stop,
        "num": num,
        "endpoint": endpoint,
        "dtype": dtype,
    }

    with open(filename, "w") as f:
        json.dump(params, f)


def generate_small_config():
    """
    Generate config files for noise, fptol, and fntol.
    The test size is 6."""
    dump_linspace_params_to_json(
        0, 0.1, num=6, endpoint=True, dtype="float64", filename="configs/noise_small.json"
    )

    dump_linspace_params_to_json(
        0, 0.3, num=6, endpoint=True, dtype="float64", filename="configs/fptol_small.json"
    )

    dump_linspace_params_to_json(
        0, 0.3, num=6, endpoint=True, dtype="float64", filename="configs/fntol_small.json"
    )


def generate_large_config():
    """
    Generate config files for noise, fptol, and fntol.
    The test size is 41."""
    dump_linspace_params_to_json(
        0, 0.1, num=41, endpoint=True, dtype="float64", filename="configs/noise_large.json"
    )

    dump_linspace_params_to_json(
        0, 0.3, num=41, endpoint=True, dtype="float64", filename="configs/fptol_large.json"
    )

    dump_linspace_params_to_json(
        0, 0.3, num=41, endpoint=True, dtype="float64", filename="configs/fntol_large.json"
    )
    


if __name__ == "__main__":
    generate_small_config()
    generate_large_config()
    print("Generate config files for noise, fptol, and fntol.")
